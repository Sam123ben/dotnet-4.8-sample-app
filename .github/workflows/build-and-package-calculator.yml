name: Build and Package SimpleCalculator App

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
    paths:
      - 'SimpleCalculatorApp/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'SimpleCalculatorApp/**'
      - '.github/workflows/**'

env:
  DOTNET_FRAMEWORK_VERSION: '4.8'
  BUILD_CONFIGURATION: 'Release'
  PROJECT_NAME: 'SimpleCalculator'
  PROJECT_FOLDER: 'SimpleCalculatorApp'

jobs:
  build-and-package:
    runs-on: windows-latest
    
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v2

    - name: Check if SimpleCalculatorApp folder exists
      run: |
        if (Test-Path "${{ env.PROJECT_FOLDER }}") {
          echo "✅ SimpleCalculatorApp folder found"
          dir "${{ env.PROJECT_FOLDER }}"
        } else {
          echo "❌ SimpleCalculatorApp folder not found"
          exit 1
        }
      shell: powershell

    - name: Restore NuGet packages
      run: |
        cd "${{ env.PROJECT_FOLDER }}"
        if (Test-Path "packages.config") {
          nuget restore packages.config -PackagesDirectory packages
        } else {
          echo "No packages.config found - skipping NuGet restore"
        }
      shell: powershell
      continue-on-error: true

    - name: Build application 
      run: |
        cd "${{ env.PROJECT_FOLDER }}"
        msbuild "${{ env.PROJECT_NAME }}.csproj" /p:Configuration=${{ env.BUILD_CONFIGURATION }} /p:Platform="Any CPU" /p:OutputPath="bin\${{ env.BUILD_CONFIGURATION }}\"
      shell: powershell

    - name: Test build output
      run: |
        cd "${{ env.PROJECT_FOLDER }}"
        echo "Checking build output in $(pwd)..."
        dir "bin\${{ env.BUILD_CONFIGURATION }}"
        if (Test-Path "bin\${{ env.BUILD_CONFIGURATION }}\${{ env.PROJECT_NAME }}.exe") {
          echo "✅ Build successful - executable found"
        } else {
          echo "❌ Build failed - executable not found"
          exit 1
        }
      shell: powershell

    - name: Create release directory
      run: |
        New-Item -ItemType Directory -Force -Path "release"
        Copy-Item "${{ env.PROJECT_FOLDER }}\bin\${{ env.BUILD_CONFIGURATION }}\*" -Destination "release\" -Recurse
        echo "Release directory contents:"
        dir release
      shell: powershell

    - name: Create version info
      run: |
        $version = if ($env:GITHUB_REF -match 'refs/tags/(.*)') { $matches[1] } else { "dev-$($env:GITHUB_SHA.Substring(0,7))" }
        $buildDate = Get-Date -Format "yyyy-MM-dd HH:mm:ss UTC"
        $versionInfo = @"
        Simple Calculator - Build Information
        =====================================
        Version: $version
        Build Date: $buildDate
        Commit: $env:GITHUB_SHA
        Branch: $env:GITHUB_REF_NAME
        Built by: GitHub Actions
        
        Requirements:
        - Windows 7 or later
        - .NET Framework 4.8 or later
        
        Usage:
        Simply run SimpleCalculator.exe to start the application.
        "@
        
        $versionInfo | Out-File -FilePath "release\VERSION.txt" -Encoding UTF8
        echo "VERSION_TAG=$version" >> $env:GITHUB_ENV
      shell: powershell

    - name: Create application zip
      run: |
        $zipName = "${{ env.PROJECT_NAME }}-$env:VERSION_TAG.zip"
        Compress-Archive -Path "release\*" -DestinationPath $zipName -CompressionLevel Optimal
        echo "Created package: $zipName"
        echo "PACKAGE_NAME=$zipName" >> $env:GITHUB_ENV
        
        # Get file size for display
        $fileSize = [math]::Round((Get-Item $zipName).length / 1MB, 2)
        echo "Package size: $fileSize MB"
      shell: powershell

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PROJECT_NAME }}-${{ env.VERSION_TAG }}
        path: release/
        retention-days: 30

    - name: Create GitHub Release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ env.PACKAGE_NAME }}
        name: Release ${{ env.VERSION_TAG }}
        body: |
          ## Simple Calculator ${{ env.VERSION_TAG }}
          
          A lightweight calculator application built with .NET Framework 4.8.
          
          ### Features
          - Basic arithmetic operations (+, -, ×, ÷)
          - Percentage calculations
          - Sign toggle
          - Clean, intuitive interface
          
          ### System Requirements
          - Windows 7 or later
          - .NET Framework 4.8 or later
          
          ### Installation
          1. Download the zip file below
          2. Extract to your desired location
          3. Run `SimpleCalculator.exe`
          
          ### Changes in this release
          - Built from commit: ${{ github.sha }}
        draft: false
        prerelease: false

    - name: Publish to GitHub Packages
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
      run: |
        # Create a simple package.json for npm-style package
        $packageJson = @{
          name = "@$($env:GITHUB_REPOSITORY.ToLower().Replace('/', '-'))/simple-calculator"
          version = ($env:VERSION_TAG -replace '^v', '') -replace '[^0-9\.].*$', ''
          description = "Simple Calculator - .NET Framework 4.8 Application"
          main = "SimpleCalculator.exe"
          repository = @{
            type = "git"
            url = "git+https://github.com/$env:GITHUB_REPOSITORY.git"
          }
          author = $env:GITHUB_ACTOR
          license = "MIT"
          files = @("*")
        } | ConvertTo-Json -Depth 3
        
        $packageJson | Out-File -FilePath "release\package.json" -Encoding UTF8
        
        # Configure npm registry
        echo "@$($env:GITHUB_REPOSITORY_OWNER.ToLower()):registry=https://npm.pkg.github.com" > release\.npmrc
        echo "//npm.pkg.github.com/:_authToken=${{ secrets.DOTNET_GITHUB_TOKEN }}" >> release\.npmrc
        
        # Publish package
        cd release
        try {
          npm publish --access public
          echo "✅ Package published successfully to GitHub Packages"
        } catch {
          echo "⚠️ Package publish failed: $($_.Exception.Message)"
          echo "This might be due to version conflicts or permissions"
        }
      shell: powershell
      env:
        NODE_AUTH_TOKEN: ${{ secrets.DOTNET_GITHUB_TOKEN }}

    - name: Upload to GitHub Packages (Generic)
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
      run: |
        echo "📦 Package Information:"
        echo "- Name: ${{ env.PACKAGE_NAME }}"
        echo "- Version: $env:VERSION_TAG"
        echo "- Size: $(Get-Item ${{ env.PACKAGE_NAME }} | Select-Object -ExpandProperty Length) bytes"
        echo ""
        echo "🔗 Package will be available at:"
        echo "- Releases: https://github.com/$env:GITHUB_REPOSITORY/releases"
        echo "- Packages: https://github.com/$env:GITHUB_REPOSITORY/packages"
        echo "- Actions Artifacts: https://github.com/$env:GITHUB_REPOSITORY/actions"
      shell: powershell

    - name: Build Summary
      run: |
        echo "## 🎉 SimpleCalculator Build Completed Successfully!" >> $env:GITHUB_STEP_SUMMARY
        echo "" >> $env:GITHUB_STEP_SUMMARY
        echo "### 📁 Project Details" >> $env:GITHUB_STEP_SUMMARY
        echo "- **Project Folder**: ${{ env.PROJECT_FOLDER }}" >> $env:GITHUB_STEP_SUMMARY
        echo "- **Package Name**: ${{ env.PACKAGE_NAME }}" >> $env:GITHUB_STEP_SUMMARY
        echo "- **Version**: $env:VERSION_TAG" >> $env:GITHUB_STEP_SUMMARY
        echo "- **Configuration**: ${{ env.BUILD_CONFIGURATION }}" >> $env:GITHUB_STEP_SUMMARY
        echo "- **Target Framework**: .NET Framework ${{ env.DOTNET_FRAMEWORK_VERSION }}" >> $env:GITHUB_STEP_SUMMARY
        echo "" >> $env:GITHUB_STEP_SUMMARY
        echo "### 🔗 Downloads & Packages" >> $env:GITHUB_STEP_SUMMARY
        echo "- **GitHub Actions Artifacts**: Available in the Actions tab for 30 days" >> $env:GITHUB_STEP_SUMMARY
        if ($env:GITHUB_REF -match 'refs/tags/') {
          echo "- **GitHub Releases**: Available in the Releases section" >> $env:GITHUB_STEP_SUMMARY
        }
        if ($env:GITHUB_REF -match 'refs/heads/(main|develop)' -or $env:GITHUB_REF -match 'refs/tags/') {
          echo "- **GitHub Packages**: Available in the Packages section" >> $env:GITHUB_STEP_SUMMARY
        }
        echo "" >> $env:GITHUB_STEP_SUMMARY
        echo "### ⚙️ Build Trigger" >> $env:GITHUB_STEP_SUMMARY
        echo "This build was triggered by changes in the \`SimpleCalculatorApp/\` folder." >> $env:GITHUB_STEP_SUMMARY
      shell: powershell